package activations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/c3sr/openwhisk-go/models"
)

// GetActivationByIDReader is a Reader for the GetActivationByID structure.
type GetActivationByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetActivationByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetActivationByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetActivationByIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetActivationByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetActivationByIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetActivationByIDOK creates a GetActivationByIDOK with default headers values
func NewGetActivationByIDOK() *GetActivationByIDOK {
	return &GetActivationByIDOK{}
}

/*GetActivationByIDOK handles this case with default header values.

Return output
*/
type GetActivationByIDOK struct {
	Payload *models.Activation
}

func (o *GetActivationByIDOK) Error() string {
	return fmt.Sprintf("[GET /namespaces/{namespace}/activations/{activationid}][%d] getActivationByIdOK  %+v", 200, o.Payload)
}

func (o *GetActivationByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Activation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetActivationByIDUnauthorized creates a GetActivationByIDUnauthorized with default headers values
func NewGetActivationByIDUnauthorized() *GetActivationByIDUnauthorized {
	return &GetActivationByIDUnauthorized{}
}

/*GetActivationByIDUnauthorized handles this case with default header values.

Unauthorized request
*/
type GetActivationByIDUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *GetActivationByIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /namespaces/{namespace}/activations/{activationid}][%d] getActivationByIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetActivationByIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetActivationByIDNotFound creates a GetActivationByIDNotFound with default headers values
func NewGetActivationByIDNotFound() *GetActivationByIDNotFound {
	return &GetActivationByIDNotFound{}
}

/*GetActivationByIDNotFound handles this case with default header values.

Item not found
*/
type GetActivationByIDNotFound struct {
	Payload *models.ErrorMessage
}

func (o *GetActivationByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /namespaces/{namespace}/activations/{activationid}][%d] getActivationByIdNotFound  %+v", 404, o.Payload)
}

func (o *GetActivationByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetActivationByIDInternalServerError creates a GetActivationByIDInternalServerError with default headers values
func NewGetActivationByIDInternalServerError() *GetActivationByIDInternalServerError {
	return &GetActivationByIDInternalServerError{}
}

/*GetActivationByIDInternalServerError handles this case with default header values.

Server error
*/
type GetActivationByIDInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *GetActivationByIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /namespaces/{namespace}/activations/{activationid}][%d] getActivationByIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetActivationByIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
