package actions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/c3sr/openwhisk-go/models"
)

// GetActionByNameReader is a Reader for the GetActionByName structure.
type GetActionByNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetActionByNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetActionByNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetActionByNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetActionByNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetActionByNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetActionByNameOK creates a GetActionByNameOK with default headers values
func NewGetActionByNameOK() *GetActionByNameOK {
	return &GetActionByNameOK{}
}

/*GetActionByNameOK handles this case with default header values.

Returned action
*/
type GetActionByNameOK struct {
	Payload *models.Action
}

func (o *GetActionByNameOK) Error() string {
	return fmt.Sprintf("[GET /namespaces/{namespace}/actions/{actionName}][%d] getActionByNameOK  %+v", 200, o.Payload)
}

func (o *GetActionByNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Action)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetActionByNameUnauthorized creates a GetActionByNameUnauthorized with default headers values
func NewGetActionByNameUnauthorized() *GetActionByNameUnauthorized {
	return &GetActionByNameUnauthorized{}
}

/*GetActionByNameUnauthorized handles this case with default header values.

Unauthorized request
*/
type GetActionByNameUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *GetActionByNameUnauthorized) Error() string {
	return fmt.Sprintf("[GET /namespaces/{namespace}/actions/{actionName}][%d] getActionByNameUnauthorized  %+v", 401, o.Payload)
}

func (o *GetActionByNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetActionByNameNotFound creates a GetActionByNameNotFound with default headers values
func NewGetActionByNameNotFound() *GetActionByNameNotFound {
	return &GetActionByNameNotFound{}
}

/*GetActionByNameNotFound handles this case with default header values.

Item not found
*/
type GetActionByNameNotFound struct {
	Payload *models.ErrorMessage
}

func (o *GetActionByNameNotFound) Error() string {
	return fmt.Sprintf("[GET /namespaces/{namespace}/actions/{actionName}][%d] getActionByNameNotFound  %+v", 404, o.Payload)
}

func (o *GetActionByNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetActionByNameInternalServerError creates a GetActionByNameInternalServerError with default headers values
func NewGetActionByNameInternalServerError() *GetActionByNameInternalServerError {
	return &GetActionByNameInternalServerError{}
}

/*GetActionByNameInternalServerError handles this case with default header values.

Server error
*/
type GetActionByNameInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *GetActionByNameInternalServerError) Error() string {
	return fmt.Sprintf("[GET /namespaces/{namespace}/actions/{actionName}][%d] getActionByNameInternalServerError  %+v", 500, o.Payload)
}

func (o *GetActionByNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
