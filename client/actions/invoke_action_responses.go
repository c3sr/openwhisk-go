package actions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/c3sr/openwhisk-go/models"
)

// InvokeActionReader is a Reader for the InvokeAction structure.
type InvokeActionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InvokeActionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewInvokeActionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewInvokeActionAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewInvokeActionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewInvokeActionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 408:
		result := NewInvokeActionRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewInvokeActionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 502:
		result := NewInvokeActionBadGateway()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewInvokeActionOK creates a InvokeActionOK with default headers values
func NewInvokeActionOK() *InvokeActionOK {
	return &InvokeActionOK{}
}

/*InvokeActionOK handles this case with default header values.

Successful activation
*/
type InvokeActionOK struct {
	Payload *models.Activation
}

func (o *InvokeActionOK) Error() string {
	return fmt.Sprintf("[POST /namespaces/{namespace}/actions/{actionName}][%d] invokeActionOK  %+v", 200, o.Payload)
}

func (o *InvokeActionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Activation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInvokeActionAccepted creates a InvokeActionAccepted with default headers values
func NewInvokeActionAccepted() *InvokeActionAccepted {
	return &InvokeActionAccepted{}
}

/*InvokeActionAccepted handles this case with default header values.

Accepted activation request
*/
type InvokeActionAccepted struct {
	Payload *models.ItemID
}

func (o *InvokeActionAccepted) Error() string {
	return fmt.Sprintf("[POST /namespaces/{namespace}/actions/{actionName}][%d] invokeActionAccepted  %+v", 202, o.Payload)
}

func (o *InvokeActionAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ItemID)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInvokeActionUnauthorized creates a InvokeActionUnauthorized with default headers values
func NewInvokeActionUnauthorized() *InvokeActionUnauthorized {
	return &InvokeActionUnauthorized{}
}

/*InvokeActionUnauthorized handles this case with default header values.

Unauthorized request
*/
type InvokeActionUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *InvokeActionUnauthorized) Error() string {
	return fmt.Sprintf("[POST /namespaces/{namespace}/actions/{actionName}][%d] invokeActionUnauthorized  %+v", 401, o.Payload)
}

func (o *InvokeActionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInvokeActionNotFound creates a InvokeActionNotFound with default headers values
func NewInvokeActionNotFound() *InvokeActionNotFound {
	return &InvokeActionNotFound{}
}

/*InvokeActionNotFound handles this case with default header values.

Item not found
*/
type InvokeActionNotFound struct {
	Payload *models.ErrorMessage
}

func (o *InvokeActionNotFound) Error() string {
	return fmt.Sprintf("[POST /namespaces/{namespace}/actions/{actionName}][%d] invokeActionNotFound  %+v", 404, o.Payload)
}

func (o *InvokeActionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInvokeActionRequestTimeout creates a InvokeActionRequestTimeout with default headers values
func NewInvokeActionRequestTimeout() *InvokeActionRequestTimeout {
	return &InvokeActionRequestTimeout{}
}

/*InvokeActionRequestTimeout handles this case with default header values.

Request timed out
*/
type InvokeActionRequestTimeout struct {
}

func (o *InvokeActionRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /namespaces/{namespace}/actions/{actionName}][%d] invokeActionRequestTimeout ", 408)
}

func (o *InvokeActionRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInvokeActionInternalServerError creates a InvokeActionInternalServerError with default headers values
func NewInvokeActionInternalServerError() *InvokeActionInternalServerError {
	return &InvokeActionInternalServerError{}
}

/*InvokeActionInternalServerError handles this case with default header values.

Server error
*/
type InvokeActionInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *InvokeActionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /namespaces/{namespace}/actions/{actionName}][%d] invokeActionInternalServerError  %+v", 500, o.Payload)
}

func (o *InvokeActionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInvokeActionBadGateway creates a InvokeActionBadGateway with default headers values
func NewInvokeActionBadGateway() *InvokeActionBadGateway {
	return &InvokeActionBadGateway{}
}

/*InvokeActionBadGateway handles this case with default header values.

Activation produced an application error
*/
type InvokeActionBadGateway struct {
	Payload *models.Activation
}

func (o *InvokeActionBadGateway) Error() string {
	return fmt.Sprintf("[POST /namespaces/{namespace}/actions/{actionName}][%d] invokeActionBadGateway  %+v", 502, o.Payload)
}

func (o *InvokeActionBadGateway) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Activation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
