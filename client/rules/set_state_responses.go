package rules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/c3sr/openwhisk-go/models"
)

// SetStateReader is a Reader for the SetState structure.
type SetStateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SetStateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSetStateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewSetStateAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewSetStateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewSetStateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewSetStateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSetStateOK creates a SetStateOK with default headers values
func NewSetStateOK() *SetStateOK {
	return &SetStateOK{}
}

/*SetStateOK handles this case with default header values.

Updated Item
*/
type SetStateOK struct {
	Payload *models.ItemID
}

func (o *SetStateOK) Error() string {
	return fmt.Sprintf("[POST /namespaces/{namespace}/rules/{ruleName}][%d] setStateOK  %+v", 200, o.Payload)
}

func (o *SetStateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ItemID)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetStateAccepted creates a SetStateAccepted with default headers values
func NewSetStateAccepted() *SetStateAccepted {
	return &SetStateAccepted{}
}

/*SetStateAccepted handles this case with default header values.

Rule has been enabled or disabled
*/
type SetStateAccepted struct {
}

func (o *SetStateAccepted) Error() string {
	return fmt.Sprintf("[POST /namespaces/{namespace}/rules/{ruleName}][%d] setStateAccepted ", 202)
}

func (o *SetStateAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSetStateBadRequest creates a SetStateBadRequest with default headers values
func NewSetStateBadRequest() *SetStateBadRequest {
	return &SetStateBadRequest{}
}

/*SetStateBadRequest handles this case with default header values.

Bad request
*/
type SetStateBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *SetStateBadRequest) Error() string {
	return fmt.Sprintf("[POST /namespaces/{namespace}/rules/{ruleName}][%d] setStateBadRequest  %+v", 400, o.Payload)
}

func (o *SetStateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetStateUnauthorized creates a SetStateUnauthorized with default headers values
func NewSetStateUnauthorized() *SetStateUnauthorized {
	return &SetStateUnauthorized{}
}

/*SetStateUnauthorized handles this case with default header values.

Unauthorized request
*/
type SetStateUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *SetStateUnauthorized) Error() string {
	return fmt.Sprintf("[POST /namespaces/{namespace}/rules/{ruleName}][%d] setStateUnauthorized  %+v", 401, o.Payload)
}

func (o *SetStateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetStateInternalServerError creates a SetStateInternalServerError with default headers values
func NewSetStateInternalServerError() *SetStateInternalServerError {
	return &SetStateInternalServerError{}
}

/*SetStateInternalServerError handles this case with default header values.

Server error
*/
type SetStateInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *SetStateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /namespaces/{namespace}/rules/{ruleName}][%d] setStateInternalServerError  %+v", 500, o.Payload)
}

func (o *SetStateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
