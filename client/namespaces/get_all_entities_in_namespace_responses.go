package namespaces

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/c3sr/openwhisk-go/models"
)

// GetAllEntitiesInNamespaceReader is a Reader for the GetAllEntitiesInNamespace structure.
type GetAllEntitiesInNamespaceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllEntitiesInNamespaceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetAllEntitiesInNamespaceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetAllEntitiesInNamespaceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetAllEntitiesInNamespaceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAllEntitiesInNamespaceOK creates a GetAllEntitiesInNamespaceOK with default headers values
func NewGetAllEntitiesInNamespaceOK() *GetAllEntitiesInNamespaceOK {
	return &GetAllEntitiesInNamespaceOK{}
}

/*GetAllEntitiesInNamespaceOK handles this case with default header values.

All entities
*/
type GetAllEntitiesInNamespaceOK struct {
	Payload GetAllEntitiesInNamespaceOKBody
}

func (o *GetAllEntitiesInNamespaceOK) Error() string {
	return fmt.Sprintf("[GET /namespaces/{namespace}][%d] getAllEntitiesInNamespaceOK  %+v", 200, o.Payload)
}

func (o *GetAllEntitiesInNamespaceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllEntitiesInNamespaceUnauthorized creates a GetAllEntitiesInNamespaceUnauthorized with default headers values
func NewGetAllEntitiesInNamespaceUnauthorized() *GetAllEntitiesInNamespaceUnauthorized {
	return &GetAllEntitiesInNamespaceUnauthorized{}
}

/*GetAllEntitiesInNamespaceUnauthorized handles this case with default header values.

Unauthorized request
*/
type GetAllEntitiesInNamespaceUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *GetAllEntitiesInNamespaceUnauthorized) Error() string {
	return fmt.Sprintf("[GET /namespaces/{namespace}][%d] getAllEntitiesInNamespaceUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAllEntitiesInNamespaceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllEntitiesInNamespaceInternalServerError creates a GetAllEntitiesInNamespaceInternalServerError with default headers values
func NewGetAllEntitiesInNamespaceInternalServerError() *GetAllEntitiesInNamespaceInternalServerError {
	return &GetAllEntitiesInNamespaceInternalServerError{}
}

/*GetAllEntitiesInNamespaceInternalServerError handles this case with default header values.

Server error
*/
type GetAllEntitiesInNamespaceInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *GetAllEntitiesInNamespaceInternalServerError) Error() string {
	return fmt.Sprintf("[GET /namespaces/{namespace}][%d] getAllEntitiesInNamespaceInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAllEntitiesInNamespaceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetAllEntitiesInNamespaceOKBody get all entities in namespace o k body
swagger:model GetAllEntitiesInNamespaceOKBody
*/
type GetAllEntitiesInNamespaceOKBody struct {

	// actions
	// Required: true
	Actions []*models.EntityBrief `json:"actions"`

	// packages
	// Required: true
	Packages []*models.EntityBrief `json:"packages"`

	// rules
	// Required: true
	Rules []*models.EntityBrief `json:"rules"`

	// triggers
	// Required: true
	Triggers []*models.EntityBrief `json:"triggers"`
}
