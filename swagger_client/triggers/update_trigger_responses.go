package triggers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/c3sr/openwhisk-go/swagger_models"
)

// UpdateTriggerReader is a Reader for the UpdateTrigger structure.
type UpdateTriggerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateTriggerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUpdateTriggerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewUpdateTriggerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewUpdateTriggerUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewUpdateTriggerConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 413:
		result := NewUpdateTriggerRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewUpdateTriggerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateTriggerOK creates a UpdateTriggerOK with default headers values
func NewUpdateTriggerOK() *UpdateTriggerOK {
	return &UpdateTriggerOK{}
}

/*UpdateTriggerOK handles this case with default header values.

Updated Item
*/
type UpdateTriggerOK struct {
	Payload *swagger_models.ItemID
}

func (o *UpdateTriggerOK) Error() string {
	return fmt.Sprintf("[PUT /namespaces/{namespace}/triggers/{triggerName}][%d] updateTriggerOK  %+v", 200, o.Payload)
}

func (o *UpdateTriggerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ItemID)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateTriggerBadRequest creates a UpdateTriggerBadRequest with default headers values
func NewUpdateTriggerBadRequest() *UpdateTriggerBadRequest {
	return &UpdateTriggerBadRequest{}
}

/*UpdateTriggerBadRequest handles this case with default header values.

Bad request
*/
type UpdateTriggerBadRequest struct {
	Payload *swagger_models.ErrorMessage
}

func (o *UpdateTriggerBadRequest) Error() string {
	return fmt.Sprintf("[PUT /namespaces/{namespace}/triggers/{triggerName}][%d] updateTriggerBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateTriggerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateTriggerUnauthorized creates a UpdateTriggerUnauthorized with default headers values
func NewUpdateTriggerUnauthorized() *UpdateTriggerUnauthorized {
	return &UpdateTriggerUnauthorized{}
}

/*UpdateTriggerUnauthorized handles this case with default header values.

Unauthorized request
*/
type UpdateTriggerUnauthorized struct {
	Payload *swagger_models.ErrorMessage
}

func (o *UpdateTriggerUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /namespaces/{namespace}/triggers/{triggerName}][%d] updateTriggerUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateTriggerUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateTriggerConflict creates a UpdateTriggerConflict with default headers values
func NewUpdateTriggerConflict() *UpdateTriggerConflict {
	return &UpdateTriggerConflict{}
}

/*UpdateTriggerConflict handles this case with default header values.

Conflicting item already exists
*/
type UpdateTriggerConflict struct {
	Payload *swagger_models.ErrorMessage
}

func (o *UpdateTriggerConflict) Error() string {
	return fmt.Sprintf("[PUT /namespaces/{namespace}/triggers/{triggerName}][%d] updateTriggerConflict  %+v", 409, o.Payload)
}

func (o *UpdateTriggerConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateTriggerRequestEntityTooLarge creates a UpdateTriggerRequestEntityTooLarge with default headers values
func NewUpdateTriggerRequestEntityTooLarge() *UpdateTriggerRequestEntityTooLarge {
	return &UpdateTriggerRequestEntityTooLarge{}
}

/*UpdateTriggerRequestEntityTooLarge handles this case with default header values.

Request entity too large
*/
type UpdateTriggerRequestEntityTooLarge struct {
	Payload *swagger_models.ErrorMessage
}

func (o *UpdateTriggerRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /namespaces/{namespace}/triggers/{triggerName}][%d] updateTriggerRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *UpdateTriggerRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateTriggerInternalServerError creates a UpdateTriggerInternalServerError with default headers values
func NewUpdateTriggerInternalServerError() *UpdateTriggerInternalServerError {
	return &UpdateTriggerInternalServerError{}
}

/*UpdateTriggerInternalServerError handles this case with default header values.

Server error
*/
type UpdateTriggerInternalServerError struct {
	Payload *swagger_models.ErrorMessage
}

func (o *UpdateTriggerInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /namespaces/{namespace}/triggers/{triggerName}][%d] updateTriggerInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateTriggerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
