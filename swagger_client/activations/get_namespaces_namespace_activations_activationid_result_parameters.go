package activations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetNamespacesNamespaceActivationsActivationidResultParams creates a new GetNamespacesNamespaceActivationsActivationidResultParams object
// with the default values initialized.
func NewGetNamespacesNamespaceActivationsActivationidResultParams() *GetNamespacesNamespaceActivationsActivationidResultParams {
	var ()
	return &GetNamespacesNamespaceActivationsActivationidResultParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetNamespacesNamespaceActivationsActivationidResultParamsWithTimeout creates a new GetNamespacesNamespaceActivationsActivationidResultParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetNamespacesNamespaceActivationsActivationidResultParamsWithTimeout(timeout time.Duration) *GetNamespacesNamespaceActivationsActivationidResultParams {
	var ()
	return &GetNamespacesNamespaceActivationsActivationidResultParams{

		timeout: timeout,
	}
}

// NewGetNamespacesNamespaceActivationsActivationidResultParamsWithContext creates a new GetNamespacesNamespaceActivationsActivationidResultParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetNamespacesNamespaceActivationsActivationidResultParamsWithContext(ctx context.Context) *GetNamespacesNamespaceActivationsActivationidResultParams {
	var ()
	return &GetNamespacesNamespaceActivationsActivationidResultParams{

		Context: ctx,
	}
}

/*GetNamespacesNamespaceActivationsActivationidResultParams contains all the parameters to send to the API endpoint
for the get namespaces namespace activations activationid result operation typically these are written to a http.Request
*/
type GetNamespacesNamespaceActivationsActivationidResultParams struct {

	/*Activationid
	  Name of activation to fetch

	*/
	Activationid string
	/*Namespace
	  The entity namespace

	*/
	Namespace string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get namespaces namespace activations activationid result params
func (o *GetNamespacesNamespaceActivationsActivationidResultParams) WithTimeout(timeout time.Duration) *GetNamespacesNamespaceActivationsActivationidResultParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get namespaces namespace activations activationid result params
func (o *GetNamespacesNamespaceActivationsActivationidResultParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get namespaces namespace activations activationid result params
func (o *GetNamespacesNamespaceActivationsActivationidResultParams) WithContext(ctx context.Context) *GetNamespacesNamespaceActivationsActivationidResultParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get namespaces namespace activations activationid result params
func (o *GetNamespacesNamespaceActivationsActivationidResultParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithActivationid adds the activationid to the get namespaces namespace activations activationid result params
func (o *GetNamespacesNamespaceActivationsActivationidResultParams) WithActivationid(activationid string) *GetNamespacesNamespaceActivationsActivationidResultParams {
	o.SetActivationid(activationid)
	return o
}

// SetActivationid adds the activationid to the get namespaces namespace activations activationid result params
func (o *GetNamespacesNamespaceActivationsActivationidResultParams) SetActivationid(activationid string) {
	o.Activationid = activationid
}

// WithNamespace adds the namespace to the get namespaces namespace activations activationid result params
func (o *GetNamespacesNamespaceActivationsActivationidResultParams) WithNamespace(namespace string) *GetNamespacesNamespaceActivationsActivationidResultParams {
	o.SetNamespace(namespace)
	return o
}

// SetNamespace adds the namespace to the get namespaces namespace activations activationid result params
func (o *GetNamespacesNamespaceActivationsActivationidResultParams) SetNamespace(namespace string) {
	o.Namespace = namespace
}

// WriteToRequest writes these params to a swagger request
func (o *GetNamespacesNamespaceActivationsActivationidResultParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	// path param activationid
	if err := r.SetPathParam("activationid", o.Activationid); err != nil {
		return err
	}

	// path param namespace
	if err := r.SetPathParam("namespace", o.Namespace); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
