package activations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/c3sr/openwhisk-go/swagger_models"
)

// GetNamespacesNamespaceActivationsActivationidLogsReader is a Reader for the GetNamespacesNamespaceActivationsActivationidLogs structure.
type GetNamespacesNamespaceActivationsActivationidLogsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNamespacesNamespaceActivationsActivationidLogsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetNamespacesNamespaceActivationsActivationidLogsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetNamespacesNamespaceActivationsActivationidLogsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetNamespacesNamespaceActivationsActivationidLogsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetNamespacesNamespaceActivationsActivationidLogsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetNamespacesNamespaceActivationsActivationidLogsOK creates a GetNamespacesNamespaceActivationsActivationidLogsOK with default headers values
func NewGetNamespacesNamespaceActivationsActivationidLogsOK() *GetNamespacesNamespaceActivationsActivationidLogsOK {
	return &GetNamespacesNamespaceActivationsActivationidLogsOK{}
}

/*GetNamespacesNamespaceActivationsActivationidLogsOK handles this case with default header values.

Return output
*/
type GetNamespacesNamespaceActivationsActivationidLogsOK struct {
	Payload *swagger_models.ActivationLogs
}

func (o *GetNamespacesNamespaceActivationsActivationidLogsOK) Error() string {
	return fmt.Sprintf("[GET /namespaces/{namespace}/activations/{activationid}/logs][%d] getNamespacesNamespaceActivationsActivationidLogsOK  %+v", 200, o.Payload)
}

func (o *GetNamespacesNamespaceActivationsActivationidLogsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ActivationLogs)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNamespacesNamespaceActivationsActivationidLogsUnauthorized creates a GetNamespacesNamespaceActivationsActivationidLogsUnauthorized with default headers values
func NewGetNamespacesNamespaceActivationsActivationidLogsUnauthorized() *GetNamespacesNamespaceActivationsActivationidLogsUnauthorized {
	return &GetNamespacesNamespaceActivationsActivationidLogsUnauthorized{}
}

/*GetNamespacesNamespaceActivationsActivationidLogsUnauthorized handles this case with default header values.

Unauthorized request
*/
type GetNamespacesNamespaceActivationsActivationidLogsUnauthorized struct {
	Payload *swagger_models.ErrorMessage
}

func (o *GetNamespacesNamespaceActivationsActivationidLogsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /namespaces/{namespace}/activations/{activationid}/logs][%d] getNamespacesNamespaceActivationsActivationidLogsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetNamespacesNamespaceActivationsActivationidLogsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNamespacesNamespaceActivationsActivationidLogsNotFound creates a GetNamespacesNamespaceActivationsActivationidLogsNotFound with default headers values
func NewGetNamespacesNamespaceActivationsActivationidLogsNotFound() *GetNamespacesNamespaceActivationsActivationidLogsNotFound {
	return &GetNamespacesNamespaceActivationsActivationidLogsNotFound{}
}

/*GetNamespacesNamespaceActivationsActivationidLogsNotFound handles this case with default header values.

Item not found
*/
type GetNamespacesNamespaceActivationsActivationidLogsNotFound struct {
	Payload *swagger_models.ErrorMessage
}

func (o *GetNamespacesNamespaceActivationsActivationidLogsNotFound) Error() string {
	return fmt.Sprintf("[GET /namespaces/{namespace}/activations/{activationid}/logs][%d] getNamespacesNamespaceActivationsActivationidLogsNotFound  %+v", 404, o.Payload)
}

func (o *GetNamespacesNamespaceActivationsActivationidLogsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNamespacesNamespaceActivationsActivationidLogsInternalServerError creates a GetNamespacesNamespaceActivationsActivationidLogsInternalServerError with default headers values
func NewGetNamespacesNamespaceActivationsActivationidLogsInternalServerError() *GetNamespacesNamespaceActivationsActivationidLogsInternalServerError {
	return &GetNamespacesNamespaceActivationsActivationidLogsInternalServerError{}
}

/*GetNamespacesNamespaceActivationsActivationidLogsInternalServerError handles this case with default header values.

Server error
*/
type GetNamespacesNamespaceActivationsActivationidLogsInternalServerError struct {
	Payload *swagger_models.ErrorMessage
}

func (o *GetNamespacesNamespaceActivationsActivationidLogsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /namespaces/{namespace}/activations/{activationid}/logs][%d] getNamespacesNamespaceActivationsActivationidLogsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetNamespacesNamespaceActivationsActivationidLogsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
