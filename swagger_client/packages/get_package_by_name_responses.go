package packages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/c3sr/openwhisk-go/swagger_models"
)

// GetPackageByNameReader is a Reader for the GetPackageByName structure.
type GetPackageByNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPackageByNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetPackageByNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetPackageByNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetPackageByNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetPackageByNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetPackageByNameOK creates a GetPackageByNameOK with default headers values
func NewGetPackageByNameOK() *GetPackageByNameOK {
	return &GetPackageByNameOK{}
}

/*GetPackageByNameOK handles this case with default header values.

Returned package
*/
type GetPackageByNameOK struct {
	Payload *swagger_models.Package
}

func (o *GetPackageByNameOK) Error() string {
	return fmt.Sprintf("[GET /namespaces/{namespace}/packages/{packageName}][%d] getPackageByNameOK  %+v", 200, o.Payload)
}

func (o *GetPackageByNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.Package)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPackageByNameUnauthorized creates a GetPackageByNameUnauthorized with default headers values
func NewGetPackageByNameUnauthorized() *GetPackageByNameUnauthorized {
	return &GetPackageByNameUnauthorized{}
}

/*GetPackageByNameUnauthorized handles this case with default header values.

Unauthorized request
*/
type GetPackageByNameUnauthorized struct {
	Payload *swagger_models.ErrorMessage
}

func (o *GetPackageByNameUnauthorized) Error() string {
	return fmt.Sprintf("[GET /namespaces/{namespace}/packages/{packageName}][%d] getPackageByNameUnauthorized  %+v", 401, o.Payload)
}

func (o *GetPackageByNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPackageByNameNotFound creates a GetPackageByNameNotFound with default headers values
func NewGetPackageByNameNotFound() *GetPackageByNameNotFound {
	return &GetPackageByNameNotFound{}
}

/*GetPackageByNameNotFound handles this case with default header values.

Item not found
*/
type GetPackageByNameNotFound struct {
	Payload *swagger_models.ErrorMessage
}

func (o *GetPackageByNameNotFound) Error() string {
	return fmt.Sprintf("[GET /namespaces/{namespace}/packages/{packageName}][%d] getPackageByNameNotFound  %+v", 404, o.Payload)
}

func (o *GetPackageByNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPackageByNameInternalServerError creates a GetPackageByNameInternalServerError with default headers values
func NewGetPackageByNameInternalServerError() *GetPackageByNameInternalServerError {
	return &GetPackageByNameInternalServerError{}
}

/*GetPackageByNameInternalServerError handles this case with default header values.

Server error
*/
type GetPackageByNameInternalServerError struct {
	Payload *swagger_models.ErrorMessage
}

func (o *GetPackageByNameInternalServerError) Error() string {
	return fmt.Sprintf("[GET /namespaces/{namespace}/packages/{packageName}][%d] getPackageByNameInternalServerError  %+v", 500, o.Payload)
}

func (o *GetPackageByNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
