package namespaces

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/c3sr/openwhisk-go/swagger_models"
)

// GetAllNamespacesReader is a Reader for the GetAllNamespaces structure.
type GetAllNamespacesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllNamespacesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetAllNamespacesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetAllNamespacesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetAllNamespacesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAllNamespacesOK creates a GetAllNamespacesOK with default headers values
func NewGetAllNamespacesOK() *GetAllNamespacesOK {
	return &GetAllNamespacesOK{}
}

/*GetAllNamespacesOK handles this case with default header values.

Array of namespaces
*/
type GetAllNamespacesOK struct {
	Payload []string
}

func (o *GetAllNamespacesOK) Error() string {
	return fmt.Sprintf("[GET /namespaces][%d] getAllNamespacesOK  %+v", 200, o.Payload)
}

func (o *GetAllNamespacesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllNamespacesUnauthorized creates a GetAllNamespacesUnauthorized with default headers values
func NewGetAllNamespacesUnauthorized() *GetAllNamespacesUnauthorized {
	return &GetAllNamespacesUnauthorized{}
}

/*GetAllNamespacesUnauthorized handles this case with default header values.

Unauthorized request
*/
type GetAllNamespacesUnauthorized struct {
	Payload *swagger_models.ErrorMessage
}

func (o *GetAllNamespacesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /namespaces][%d] getAllNamespacesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAllNamespacesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllNamespacesInternalServerError creates a GetAllNamespacesInternalServerError with default headers values
func NewGetAllNamespacesInternalServerError() *GetAllNamespacesInternalServerError {
	return &GetAllNamespacesInternalServerError{}
}

/*GetAllNamespacesInternalServerError handles this case with default header values.

Server error
*/
type GetAllNamespacesInternalServerError struct {
	Payload *swagger_models.ErrorMessage
}

func (o *GetAllNamespacesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /namespaces][%d] getAllNamespacesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAllNamespacesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
