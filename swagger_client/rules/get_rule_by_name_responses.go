package rules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/c3sr/openwhisk-go/swagger_models"
)

// GetRuleByNameReader is a Reader for the GetRuleByName structure.
type GetRuleByNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRuleByNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetRuleByNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetRuleByNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetRuleByNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetRuleByNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetRuleByNameOK creates a GetRuleByNameOK with default headers values
func NewGetRuleByNameOK() *GetRuleByNameOK {
	return &GetRuleByNameOK{}
}

/*GetRuleByNameOK handles this case with default header values.

Returned rule
*/
type GetRuleByNameOK struct {
	Payload *swagger_models.Rule
}

func (o *GetRuleByNameOK) Error() string {
	return fmt.Sprintf("[GET /namespaces/{namespace}/rules/{ruleName}][%d] getRuleByNameOK  %+v", 200, o.Payload)
}

func (o *GetRuleByNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.Rule)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRuleByNameUnauthorized creates a GetRuleByNameUnauthorized with default headers values
func NewGetRuleByNameUnauthorized() *GetRuleByNameUnauthorized {
	return &GetRuleByNameUnauthorized{}
}

/*GetRuleByNameUnauthorized handles this case with default header values.

Unauthorized request
*/
type GetRuleByNameUnauthorized struct {
	Payload *swagger_models.ErrorMessage
}

func (o *GetRuleByNameUnauthorized) Error() string {
	return fmt.Sprintf("[GET /namespaces/{namespace}/rules/{ruleName}][%d] getRuleByNameUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRuleByNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRuleByNameNotFound creates a GetRuleByNameNotFound with default headers values
func NewGetRuleByNameNotFound() *GetRuleByNameNotFound {
	return &GetRuleByNameNotFound{}
}

/*GetRuleByNameNotFound handles this case with default header values.

Item not found
*/
type GetRuleByNameNotFound struct {
	Payload *swagger_models.ErrorMessage
}

func (o *GetRuleByNameNotFound) Error() string {
	return fmt.Sprintf("[GET /namespaces/{namespace}/rules/{ruleName}][%d] getRuleByNameNotFound  %+v", 404, o.Payload)
}

func (o *GetRuleByNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRuleByNameInternalServerError creates a GetRuleByNameInternalServerError with default headers values
func NewGetRuleByNameInternalServerError() *GetRuleByNameInternalServerError {
	return &GetRuleByNameInternalServerError{}
}

/*GetRuleByNameInternalServerError handles this case with default header values.

Server error
*/
type GetRuleByNameInternalServerError struct {
	Payload *swagger_models.ErrorMessage
}

func (o *GetRuleByNameInternalServerError) Error() string {
	return fmt.Sprintf("[GET /namespaces/{namespace}/rules/{ruleName}][%d] getRuleByNameInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRuleByNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger_models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
